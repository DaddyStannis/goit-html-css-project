{"mappings":"AECA,uCAOA,gBAMA,uDAeA,0FAQA,sBAMA,8GAMA,iBAKA,iCAMA,0CAOA,uICnEA,mFC4CE,0DDnCA,4BCyCA,oCDnCA,wBC+CA,qCDzCA","sources":["index.e47eaf65.css","src/sass/index.scss","src/sass/base/_normilize.scss","src/sass/base/_container.scss","src/sass/base/_mixins.scss"],"sourcesContent":["*, :before, :after {\n  box-sizing: border-box;\n}\n\nul, ol {\n  padding: 0;\n}\n\nbody, h1, h2, h3, h4, p, ul, ol, li, figure, figcaption {\n  margin: 0;\n}\n\nbody {\n  min-height: 100vh;\n  scroll-behavior: smooth;\n  text-rendering: optimizespeed;\n  line-height: 1.5;\n}\n\nul, ol {\n  list-style: none;\n}\n\na {\n  -webkit-text-decoration-skip-ink: auto;\n  text-decoration-skip-ink: auto;\n  color: currentColor;\n  text-decoration: none;\n}\n\nbutton {\n  padding: 0;\n}\n\nimg {\n  max-width: 100%;\n  display: block;\n}\n\ninput, button, textarea, select {\n  font: inherit;\n}\n\ninput::-webkit-outer-spin-button, input::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  -ms-appearance: none;\n  appearance: none;\n  margin: 0;\n}\n\n.container {\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n}\n\n@media screen and (min-width: 480px) and (max-width: 767px) {\n  .container {\n    min-width: 480px;\n  }\n}\n\n@media screen and (min-width: 768px) {\n  .container {\n    width: 704px;\n  }\n}\n\n@media screen and (min-width: 1280px) {\n  .container {\n    width: 1110px;\n  }\n}\n\n/*# sourceMappingURL=index.e47eaf65.css.map */\n","@import './base/base-main';\n@import './components/components-main';\n@import './components/modals/modals-main';\n","/* Указываем box sizing */\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n/* Убираем внутренние отступы */\nul,\nol {\n  padding: 0;\n}\n\n/* Убираем внешние отступы */\nbody,\nh1,\nh2,\nh3,\nh4,\np,\nul,\nol,\nli,\nfigure,\nfigcaption {\n  margin: 0;\n}\n\n/* Выставляем основные настройки по-умолчанию для body */\nbody {\n  min-height: 100vh;\n  scroll-behavior: smooth;\n  text-rendering: optimizeSpeed;\n  line-height: 1.5;\n}\n\n/* Удаляем стандартную стилизацию для всех ul и il, у которых есть атрибут class*/\nul,\nol {\n  list-style: none;\n}\n\n/* Элементы a, у которых нет класса, сбрасываем до дефолтных стилей */\na {\n  text-decoration-skip-ink: auto;\n  text-decoration: none;\n  color: currentColor;\n}\n\nbutton {\n  padding: 0px;\n}\n\n/* Упрощаем работу с изображениями */\nimg {\n  max-width: 100%;\n  display: block;\n}\n\n/* Наследуем шрифты для инпутов и кнопок */\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  appearance: none;\n  -webkit-appearance: none;\n  margin: 0;\n}\n",".container {\n  padding-left: 15px;\n  padding-right: 15px;\n\n  margin-left: auto;\n  margin-right: auto;\n}\n\n@include media-phone {\n  .container {\n    min-width: 480px;\n  }\n}\n\n@include media-tablet {\n  .container {\n    width: 704px;\n  }\n}\n\n@include media-desktop {\n  .container {\n    width: 1110px;\n  }\n}\n","// ----------------------------------------------------------------------------------  Шрифты  ---------------------------------------------------------------------------------- //\n\n@mixin main-font($weight, $size, $height, $style: normal, $transform: none) {\n  font-family: 'Poppins', sans-serif;\n\n  font-weight: $weight;\n  font-size: $size;\n  line-height: $height;\n  font-style: $style;\n  text-transform: $transform;\n}\n\n@mixin second-font($weight, $size, $height, $style: normal, $transform: none) {\n  font-family: 'Inter', sans-serif;\n\n  font-weight: $weight;\n  font-size: $size;\n  line-height: $height;\n  font-style: $style;\n  text-transform: $transform;\n}\n\n// ========  How to use:  ==============\n// К примеру есть следующие стили из секции hero:\n// font-family: 'Poppins';\n// font-style: normal;\n// font-weight: 400;\n// font-size: 72px;\n// line-height: 108px;\n\n// Вот что мы пишем в scss:\n// @include main-font(400, 72px, calc(108 / 72);\n// =============================================\n// Порядок задания свойств в скобочках -- font-weight, font-size, font-height, font-style (если ничего не передать, будет normal), text-transform (если ничего не передать, будет none)\n\n// ----------------------------------------------------------------------------------  Медиа запросы  ---------------------------------------------------------------------------------- //\n\n@mixin media-phone-resp {\n  @media screen and (max-width: 479px) {\n    @content;\n  }\n}\n\n@mixin media-phone {\n  @media screen and (min-width: 480px) and (max-width: 767px) {\n    @content;\n  }\n}\n\n@mixin media-tablet {\n  @media screen and (min-width: 768px) {\n    @content;\n  }\n}\n\n@mixin media-tablet-desktop {\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    @content;\n  }\n}\n\n@mixin media-desktop {\n  @media screen and (min-width: 1280px) {\n    @content;\n  }\n}\n\n@mixin retina {\n  @media (min-device-pixel-ratio: 2),\n    (-webkit-min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    @content;\n  }\n}\n\n// @include media-phone {       ________\n//   body {                            / -\n//     background-color: tomato;  <<< =  - Все как обычно, тут твои стили, все просто, просто запись покороче.\n//   }                          _______\\ -\n// }\n\n// Тоже самое для background-image - достаточно прописать @include retina { <your styles> } и все макароны для ретина дисплеев будут автоматически подставлены.\n\n// ----------------------------------------------------------------------------------  Бордер  ---------------------------------------------------------------------------------- //\n\n@mixin bordered($size, $color, $radius: 0px, $type: solid) {\n  border: $size $type $color;\n  border-radius: $radius;\n}\n\n// How to use:\n// @include bordered(1px, #000, 16px, dashed);\n// Если 2 последних аргумента $radius и $type не указать, то будут подставлены default значения, а именно border-radius: 0px и border-type: solid, то есть если Вам не нужен\n// border-radius, просто не передавайте аргумент, если не нужен другой стиль, отличный от solid, тоже ничего не указываем.\n\n// ----------------------------------------------------------------------------------  Центрирование  ---------------------------------------------------------------------------------- //\n\n@mixin flexed($justify: center, $align: center) {\n  display: flex;\n  justify-content: $justify;\n  align-items: $align;\n}\n\n@mixin absolute($top: 50%, $left: 50%, $X: -50%, $Y: -50%) {\n  position: absolute;\n  top: $top;\n  left: $left;\n  transform: translate($X $Y);\n}\n\n// How to use:\n// @include flexed(justify-content, align items):\n// display:flex - идет по умолчанию\n// Если ичего не передавать в аргументах, то justify-content и align-items будут иметь значение center.\n// Подобная ситуация с абсолюбом, только значений больше, 1й аргумент - top, 2й - left, 3й - translateX, 4й - translateY\n// Если ничего не указать. то элемент станет по центру родителя имеющего position отличную от static.\n"],"names":[],"version":3,"file":"index.e47eaf65.css.map"}